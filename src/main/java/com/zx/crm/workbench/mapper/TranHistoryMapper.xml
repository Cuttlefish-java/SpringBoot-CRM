<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zx.crm.workbench.mapper.TranHistoryMapper">
  <resultMap id="BaseResultMap" type="com.zx.crm.workbench.model.TranHistory">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="stage" jdbcType="VARCHAR" property="stage" />
    <result column="money" jdbcType="VARCHAR" property="money" />
    <result column="expected_Date" jdbcType="CHAR" property="expectedDate" />
    <result column="create_Time" jdbcType="CHAR" property="createTime" />
    <result column="create_By" jdbcType="VARCHAR" property="createBy" />
    <result column="tran_Id" jdbcType="CHAR" property="tranId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, stage, money, expected_Date, create_Time, create_By, tran_Id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_tran_history
    where id = #{id,jdbcType=CHAR}
  </select>
    <select id="selectByTranId" resultType="com.zx.crm.workbench.model.TranHistory">
      select
      <include refid="Base_Column_List" />
      from tbl_tran_history
      where tran_Id = #{tranId}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tbl_tran_history
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.zx.crm.workbench.model.TranHistory">
    insert into tbl_tran_history (id, stage, money, 
      expected_Date, create_Time, create_By, 
      tran_Id)
    values (#{id,jdbcType=CHAR}, #{stage,jdbcType=VARCHAR}, #{money,jdbcType=VARCHAR}, 
      #{expectedDate,jdbcType=CHAR}, #{createTime,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR}, 
      #{tranId,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zx.crm.workbench.model.TranHistory">
    insert into tbl_tran_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="stage != null">
        stage,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="expectedDate != null">
        expected_Date,
      </if>
      <if test="createTime != null">
        create_Time,
      </if>
      <if test="createBy != null">
        create_By,
      </if>
      <if test="tranId != null">
        tran_Id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="stage != null">
        #{stage,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=VARCHAR},
      </if>
      <if test="expectedDate != null">
        #{expectedDate,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="tranId != null">
        #{tranId,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zx.crm.workbench.model.TranHistory">
    update tbl_tran_history
    <set>
      <if test="stage != null">
        stage = #{stage,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=VARCHAR},
      </if>
      <if test="expectedDate != null">
        expected_Date = #{expectedDate,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_Time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="createBy != null">
        create_By = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="tranId != null">
        tran_Id = #{tranId,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zx.crm.workbench.model.TranHistory">
    update tbl_tran_history
    set stage = #{stage,jdbcType=VARCHAR},
      money = #{money,jdbcType=VARCHAR},
      expected_Date = #{expectedDate,jdbcType=CHAR},
      create_Time = #{createTime,jdbcType=CHAR},
      create_By = #{createBy,jdbcType=VARCHAR},
      tran_Id = #{tranId,jdbcType=CHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>